;                                                  -*- comment-start: ";"; -*-
[supervisord]
nodaemon=true
logfile=%(ENV_LOG_DIR)s/supervisord.robot_ui.log
strip_ansi=true
childlogdir=%(ENV_LOG_DIR)s
user=%(ENV_USER)s  ; Should already be running as a non-Root user and thus be a no-op

[rpcinterface:supervisor]
supervisor.rpcinterface_factory =
    supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix://%(ENV_RUN_DIR)s/supervisor.sock

[unix_http_server]
file = %(ENV_RUN_DIR)s/supervisor.sock
chown = %(ENV_USER)s:%(ENV_USER)s

[rpcinterface:pp_launcher_rpc]
supervisor.rpcinterface_factory =
    pp_ros_launch.launcher.rpcinterface:make_rpcinterface
retries = 1

[eventlistener:pp_launcher_listener]
command = rosrun pp_ros_launch pp_launcher_listener
buffer_size = 100
events = SUPERVISOR_STATE_CHANGE_RUNNING,PROCESS_STATE
result_handler = pp_ros_launch.launcher.rpcinterface:handle_event

[program:xorg]
priority=10
autostart=false
command=Xorg
    -noreset +extension GLX +extension RANDR +extension RENDER
    -logfile %(ENV_LOG_DIR)s/xorg.log -config %(here)s/xorg.conf
    %(ENV_DISPLAY)s

[program:x11vnc]
priority=20
autostart=false
command=x11vnc -display %(ENV_DISPLAY)s
    -o %(ENV_LOG_DIR)s/x11vnc.log
    -xkb -forever -shared -nolookup -nocursorshape -nocursorpos

[program:launcher_ui]
; With real GPU hardware launch only launcher_ui program
priority=30
autostart=false
autorestart=false
startretries=0
command=rosrun robot_ui launcher_ui %(ENV_LAUNCHER_UI_ARGS)s
startsecs=5  ; Allow time to fail before completely started
stopwaitsecs=40  ; Allow time to exit gracefully
stdout_events_enabled = true
stderr_events_enabled = true
; More setting from
; http://supervisord.org/configuration.html;program-x-section-settings
; stdout_logfile=
; redirect_stderr=true
; stdout_logfile_backups=10

[program:robot_ui]
; Virtual PathPilot launches xorg, x11vnc and robot_ui programs
priority=30
autostart=false
autorestart=false
startretries=0
command=roslaunch
    %(ENV_ROBOT_PACKAGE)s robot_ui.launch %(ENV_ROSLAUNCH_ARGS)s
startsecs=20  ; Allow time to fail before completely started
stopwaitsecs=40  ; Allow time to exit gracefully
stdout_events_enabled = true
stderr_events_enabled = true

[eventlistener:stdout]
command = supervisor_stdout
buffer_size = 100
events = PROCESS_LOG
result_handler = supervisor_stdout:event_handler
